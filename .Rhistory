system("cmd.exe /c whoami /priv")
system("cmd.exe /c powershell start -verb runas cmd")
system("powershell start -verb runas cmd")
system("runas /user:Administrator cmd")
hkust19990504
system("runas /user:Administrator cmd", invisible = FALSE)
system("runas /user:Administrator cmd", invisible = FALSE)
system("Hkust19990504")
install_py_packages <- function(python_location, pakcage_name, pip = "pip") {
if(pip %in% c("conda", "pip")) {
cmd <- sprintf("cmd.exe /c %s -m %s install %s", python_location, pip, pakcage_name)
system(cmd, invisible = FALSE, minimized = TRUE)
} else {
print("Error! Python modules can only be installed using **pip** or **conda**")
}
}
install_py_packages(where_python()[2], "pycnnum")
source("E:/OneDrive - HKUST Connect/R packages/RconnectPy/RconnectPy/R/where_py.R", echo=TRUE)
where_python <- function() {
info <- system("cmd.exe /c python --version", intern = TRUE)
if(!stringr::str_detect(info, "not recognized")) {
python_location <- system("cmd.exe /c where python", intern = TRUE)
return(python_location)
} else {
print("Error! Python is not installed or Python has not been added to the system path")
}
}
install_py_packages(where_python()[2], "pycnnum")
?system
install_py_packages <- function(python_location, pakcage_name, pip = "pip") {
if(pip %in% c("conda", "pip")) {
cmd <- sprintf("cmd.exe /c %s -m %s install %s", python_location, pip, pakcage_name)
info <- ?system(cmd, intern = TRUE)
print(sprintf("Successfully install %s", package_name))
} else {
print("Error! Python modules can only be installed using **pip** or **conda**")
}
}
install_py_packages(where_python()[2], "pycnnum")
install_py_packages <- function(python_location, pakcage_name, pip = "pip") {
if(pip %in% c("conda", "pip")) {
cmd <- sprintf("cmd.exe /c %s -m %s install %s", python_location, pip, pakcage_name)
info <- ?system(cmd, intern = TRUE)
print(sprintf("Successfully install %s", pakcage_name))
} else {
print("Error! Python modules can only be installed using **pip** or **conda**")
}
}
install_py_packages(where_python()[2], "pycnnum")
install_py_packages <- function(python_location, pakcage_name, pip = "pip") {
if(pip %in% c("conda", "pip")) {
cmd <- sprintf("cmd.exe /c %s -m %s install %s", python_location, pip, pakcage_name)
info <- system(cmd, intern = TRUE)
print(sprintf("Successfully install %s", pakcage_name))
} else {
print("Error! Python modules can only be installed using **pip** or **conda**")
}
}
install_py_packages(where_python()[2], "pycnnum")
info
cmd <- sprintf("cmd.exe /c %s -m %s install %s", where_python()[2], "pip", "pycnnum")
info <- system(cmd, intern = TRUE)
info
cmd <- sprintf("cmd.exe /c %s -m %s install %s", where_python()[2], "pip", "34")
info <- system(cmd, intern = TRUE)
info
info
install_py_packages <- function(python_location, pakcage_name, pip = "pip") {
if(pip %in% c("conda", "pip")) {
cmd <- sprintf("cmd.exe /c %s -m %s install %s", python_location, pip, pakcage_name)
info <- system(cmd, intern = TRUE)
if(stringr::str_detect(info, "ERROR")) {
print("Error Occurs!")
} else {
print(sprintf("Successfully install %s!", pakcage_name))
}
} else {
print("Error! Python modules can only be installed using **pip** or **conda**")
}
}
install_py_packages(where_python()[2], "pycnnum")
stringr::str_detect(info, "ERROR")
stringr::str_c(info)
stringr::str_c(info, collapse = "")
install_py_packages <- function(python_location, pakcage_name, pip = "pip") {
if(pip %in% c("conda", "pip")) {
cmd <- sprintf("cmd.exe /c %s -m %s install %s", python_location, pip, pakcage_name)
info <- system(cmd, intern = TRUE)
if(stringr::str_detect(stringr::str_c(info, collapse = ""), "ERROR")) {
print("Error Occurs!")
} else {
print(sprintf("Successfully install %s!", pakcage_name))
}
} else {
print("Error! Python modules can only be installed using **pip** or **conda**")
}
}
install_py_packages(where_python()[2], "pycnnum")
import_package <- Vectorize(
function(package_name) {
pycnnum <- reticulate::import(package_name)
}
)
import_py_package <- Vectorize(
function(package_name) {
pycnnum <- reticulate::import(package_name)
}
)
import_py_package("pycnnum")
import_py_package("pycnnum", "pandas")
import_py_package(c("pycnnum", "pandas"))
import_py_package <- Vectorize(
function(package_name) {
py_package <- reticulate::import(package_name)
return(py_package)
}
)
import_py_package(c("pycnnum", "pandas"))
pycnnum <- import_py_package(c("pycnnum", "pandas"))
packages <- import_py_package(c("pycnnum", "pandas"))
pycnnum <- purrr::pluck(packages, "pycnnum")
import_py_package <- Vectorize(
function(package_name) {
py_package <- reticulate::import(package_name)
}
)
packages <- import_py_package(c("pycnnum", "pandas"))
rm(packages)
packages <- import_py_package(c("pycnnum", "pandas"))
import_py_package <- Vectorize(
function(package_name) {
py_package <- reticulate::import(package_name)
return(py_package)
}
)
import_py_package <- Vectorize(
function(package_name) {
py_package <- reticulate::import(package_name)
return(py_package)
}
)
cn_to_arabic <- function(x, names = TRUE) {
result <- purrr::map_vec(x, pycnnum$cn2num)
if(names) {
names(result) <- x
}
return(result)
}
cn_to_arabic <- function(x, names = TRUE) {
result <- purrr::map_vec(x, pycnnum$num2cn)
if(names) {
names(result) <- x
}
return(result)
}
arabic_to_cn <- function(x, names = TRUE) {
result <- purrr::map_vec(x, pycnnum$num2cn)
if(names) {
names(result) <- x
}
return(result)
}
arabic_to_cn(135564)
